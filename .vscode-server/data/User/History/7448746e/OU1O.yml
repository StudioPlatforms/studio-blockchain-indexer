version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=studio_indexer_new
      - POSTGRES_USER=new_user
      - POSTGRES_PASSWORD=new_strong_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always



  indexer:
    build: .
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=studio_indexer_new
      - DB_USER=new_user
      - DB_PASSWORD=new_strong_password
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "echo 'Starting indexer...' && npm start"
    ports:
      - "3000:3000"
    volumes:
      - indexer_logs:/app/logs

  enhanced-monitor:
    build:
      context: ./scripts
      dockerfile: Dockerfile.enhanced-monitor
    environment:
      - INDEXER_HOST=indexer
      - INDEXER_PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=analytics_data_new
      - DB_USER=new_user
      - DB_PASSWORD=new_strong_password
    volumes:
      - enhanced_monitor_logs:/var/log
      - enhanced_monitor_backups:/var/backups/indexer
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      postgres:
        condition: service_healthy
      indexer:
        condition: service_started
    restart: always

networks:
  default:
    name: studio_indexer_network

volumes:
  postgres_data:
  healthcheck_logs:
  indexer_logs:
  enhanced_monitor_logs:
  enhanced_monitor_backups:
